@model CourseManagement.Core.ViewModels.ContentViewModel;

@{
    ViewData["Title"] = "Nội dung bài học";
    Layout = "_Layout";
}

<style>
    .lesson-content-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .lesson-header {
        background: linear-gradient(135deg, #6e8efb, #a777e3);
        border-radius: 10px;
        padding: 2rem;
        margin-bottom: 2rem;
        color: white;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .lesson-header:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }

    .content-card {
        background-color: white;
        border-radius: 10px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        opacity: 0;
        transform: translateY(20px);
    }

    .content-card.animated {
        opacity: 1;
        transform: translateY(0);
    }

    .content-card:hover {
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
        transform: translateY(-5px);
    }

    .card-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid #f0f0f0;
    }

    .card-content {
        font-size: 1.1rem;
        line-height: 1.7;
        color: #444;
    }

    .summary-section {
        background-color: #f9f7ff;
        border-left: 4px solid #a777e3;
        padding: 1.5rem;
        border-radius: 0 10px 10px 0;
        margin-top: 2rem;
        transition: all 0.3s ease;
    }

    .summary-section:hover {
        background-color: #f0ebff;
        transform: translateX(5px);
    }

    .back-button {
        display: inline-flex;
        align-items: center;
        padding: 0.75rem 1.5rem;
        background-color: #6e8efb;
        color: white;
        border-radius: 30px;
        text-decoration: none;
        font-weight: 600;
        margin-top: 1rem;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
    }

    .back-button:hover {
        background-color: #5d7df7;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(110, 142, 251, 0.4);
    }

    .back-button i {
        margin-right: 0.5rem;
    }

    .content-placeholder {
        height: 400px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f9f9f9;
        border-radius: 10px;
        color: #888;
    }

    .loader {
        border: 5px solid #f3f3f3;
        border-top: 5px solid #6e8efb;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        animation: spin 1s linear infinite;
        margin: 2rem auto;
    }
    
</style>

<div class="lesson-content-container">
    <div class="lesson-header animate__animated animate__fadeIn">
        <h1 id="lessonTitle">Đang tải nội dung bài học...</h1>
        <p id="lessonDescription" class="mt-2">Vui lòng đợi trong giây lát</p>
    </div>

    <div id="contentContainer">
        <div class="content-card">
            <div class="loader"></div>
        </div>
    </div>

    <a href="javascript:history.back()" class="back-button">
        <i class="fas fa-arrow-left"></i> Quay lại
    </a>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Get lessonId from URL
            
            if (!lessonId) {
                showError("Không tìm thấy thông tin bài học");
                return;
            }

            // Get lesson details (title, description)
            $.ajax({
                url: '@Url.Action("GetLessonById", "Lesson")', // Update the URL as needed
                type: 'GET',
                data: {id: lessonId},
                success: function (response) {
                    if (response.success) {
                        // Update UI with lesson details
                        $("#lessonTitle").text(response.data.name);
                        $("#lessonDescription").text(response.data.description);
                    } else {
                        showError("Không thể tải thông tin bài học");
                    }
                },
                error: function () {
                    showError("Không thể tải thông tin bài học");
                }
            });

            // Get lesson content (main content, summary)
            $.ajax({
                url: '@Url.Action("GetContentByLessonId", "LessonContent", new { area = "LessonContent" })', // Update the URL as needed
                type: 'GET',
                data: {id: lessonId},
                success: function (response) {
                    if (response.success) {
                        renderContent(response);
                    } else {
                        showNoContent();
                    }
                },
                error: function () {
                    showError("Không thể tải nội dung bài học");
                }
            });

            // Render content into the page
            function renderContent(contentData) {
                const container = $("#contentContainer");
                container.empty();

                // Main content
                const mainContentCard = $('<div class="content-card">')
                    .append('<h2 class="card-title">Nội dung bài học</h2>')
                    .append('<div class="card-content">' + contentData.mainContent + '</div>');

                container.append(mainContentCard);

                // If summary exists, render the summary section
                if (contentData.summary && contentData.summary.trim() !== '') {
                    const summarySection = $('<div class="content-card">')
                        .append('<h2 class="card-title">Tóm tắt</h2>')
                        .append('<div class="summary-section">' + contentData.summary + '</div>');

                    container.append(summarySection);
                }

                // Apply animations to the content cards with a delay
                setTimeout(function () {
                    $(".content-card").each(function (index) {
                        const card = $(this);
                        setTimeout(function () {
                            card.addClass("animated");
                        }, index * 200);
                    });
                }, 200);
            }

            // Show no content placeholder
            function showNoContent() {
                const container = $("#contentContainer");
                container.empty();

                container.append(
                    $('<div class="content-card animated">')
                        .append('<div class="content-placeholder">')
                        .find('.content-placeholder')
                        .append('<p>Chưa có nội dung cho bài học này</p>')
                        .end()
                );
            }

            // Show error message
            function showError(message) {
                const container = $("#contentContainer");
                container.empty();

                container.append(
                    $('<div class="content-card animated">')
                        .append('<div class="content-placeholder text-danger">')
                        .find('.content-placeholder')
                        .append('<p><i class="fas fa-exclamation-circle me-2"></i> ' + message + '</p>')
                        .end()
                );

                $("#lessonTitle").text("Có lỗi xảy ra");
                $("#lessonDescription").text("");
            }

            

        });

    </script>
}
